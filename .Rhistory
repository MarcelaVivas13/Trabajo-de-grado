# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=2, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=3, line=-1, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=2, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-1, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=2, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=2, line=-1, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=2, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-25, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-50, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-30, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-10, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-20, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-15, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.5, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-16, at=0.5, cex=1.5, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-16, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=3, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-17, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-17, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(2,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-17, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,4,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-17, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(3,1,3,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-17, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(2,1,2,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-17, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(2,1,2,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-18, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(2,1,2,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend <- c("Lognormal")
denscomp(list(fw), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(fw), legendtext = plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend <- c("Lognormal")
denscomp(list(ln), legendtext = plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(ln), legendtext = plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Leucocitos individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Leucocitos individuos no enfermos", side=1, line=-18, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(2,1,2,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend<-c("Logisica")
denscomp(list(pn), legendtext=plot.legend)
qqcomp(list(pn), legendtext=plot.legend)
# Para Leucocitos individuos no enfermos
plot.legend<-c("Logisica")
denscomp(list(qn), legendtext=plot.legend)
qqcomp(list(qn), legendtext=plot.legend)
# Añadir títulos generales a las filas
mtext("Plaquetas individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Plaquetas individuos no enfermos", side=1, line=-18, at=0.5, cex=1.3, outer=TRUE)
x11()
par(mfrow=c(2,2), oma=c(2,1,2,1)) # oma ajusta los márgenes exteriores para el título
# Para Leucocitos individuos enfermos
plot.legend<-c("Logisica")
denscomp(list(pn), legendtext=plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(pn), legendtext=plot.legend, main = "QQ-Plot")
# Para Leucocitos individuos no enfermos
plot.legend<-c("Logisica")
denscomp(list(qn), legendtext=plot.legend, main = "Histograma y densidades teóricas")
qqcomp(list(qn), legendtext=plot.legend, main = "QQ-Plot")
# Añadir títulos generales a las filas
mtext("Plaquetas individuos enfermos", side=3, line=-1, at=0.5, cex=1.3, outer=TRUE)
mtext("Plaquetas individuos no enfermos", side=1, line=-18, at=0.5, cex=1.3, outer=TRUE)
ad.test(Datos$nmono,plnorm3,gamma = -0.01347245,meanlog = -0.40325803,sdlog =0.53709532)
####monocitos ----
library(e1071)
library(stats)
library(gridExtra)
library(goftest)
ad.test(Datos$nmono,plnorm3,gamma = -0.01347245,meanlog = -0.40325803,sdlog =0.53709532)
ad.test(noenfermos$nmono,plnorm3,gamma = 0.05732773,meanlog = -0.50855315,sdlog =0.56999857)
#punto de corte por boostrap
PC <- c()
for (i in 1:1000) {
# Sampleando datos para los dos grupos
densidad_positivos <- sample(Conjunta_DX[Conjunta_DX$dxdengue == "1",]$fdensidad1, 1000, replace = TRUE)
densidad_negativos <- sample(Conjunta_DX[Conjunta_DX$dxdengue == "0",]$fdensidad1, 9000, replace = TRUE)
# Creando un dataframe con las muestras bootstrapped
datos2 <- data.frame(dxdengue = factor(c(rep(1, 1000), rep(0, 9000))),
densidad = c(densidad_positivos, densidad_negativos))
# Calculando la curva PR
pr <- pr.curve(scores.class0 = datos2$densidad[datos2$dxdengue == "0"],
scores.class1 = datos2$densidad[datos2$dxdengue == "1"], curve = TRUE)
recall <- pr$curve[, 1]  # Asume que la primera columna es recall
precision <- pr$curve[, 2]  # Asume que la segunda columna es precision
thresholds <- pr$curve[, 3]
# Calculando F-score
f_score <- 2 * precision * recall / (precision + recall)
# Encontrando el umbral que maximiza el F-score
max_index <- which.max(f_score)
PC[i] <- thresholds[max_index]
}
###  librerias ###
library(readxl);library(GGally);library(ggplot2);library(patchwork)
library(rriskDistributions);library("fitdistrplus");library(stats)
library(MASS);library(nortest);library(goftest);library(rmutil); library(e1071)
library(copula);library(dplyr);library(VineCopula); library(naivebayes);library(PRROC);
library(GGally);library(gridExtra)
#punto de corte por boostrap
PC <- c()
for (i in 1:1000) {
# Sampleando datos para los dos grupos
densidad_positivos <- sample(Conjunta_DX[Conjunta_DX$dxdengue == "1",]$fdensidad1, 1000, replace = TRUE)
densidad_negativos <- sample(Conjunta_DX[Conjunta_DX$dxdengue == "0",]$fdensidad1, 9000, replace = TRUE)
# Creando un dataframe con las muestras bootstrapped
datos2 <- data.frame(dxdengue = factor(c(rep(1, 1000), rep(0, 9000))),
densidad = c(densidad_positivos, densidad_negativos))
# Calculando la curva PR
pr <- pr.curve(scores.class0 = datos2$densidad[datos2$dxdengue == "0"],
scores.class1 = datos2$densidad[datos2$dxdengue == "1"], curve = TRUE)
recall <- pr$curve[, 1]  # Asume que la primera columna es recall
precision <- pr$curve[, 2]  # Asume que la segunda columna es precision
thresholds <- pr$curve[, 3]
# Calculando F-score
f_score <- 2 * precision * recall / (precision + recall)
# Encontrando el umbral que maximiza el F-score
max_index <- which.max(f_score)
PC[i] <- thresholds[max_index]
}
# Puedes hacer algo con los PC calculados, como calcular la mediana
median_PC <- median(PC)
median_PC
#calculo de los valores predictivos
library(ggplot2)
library(gridExtra)
# Crear una secuencia de prevalencias
prevalencia <- seq(0, 1, by = 0.01)
#Valores predictivos para la estimaciones por apriori no informativa
#
VPP_1<- (Theta11 * prevalencia) /
((Theta11 * prevalencia) + ((1 - Theta21) * (1 - prevalencia)))
VPN_1 <- (Theta21* (1 - prevalencia)) /
(((1 - Theta11) * prevalencia) + (Theta21* (1 - prevalencia)))
#
VPP_2 <- (Theta12 * prevalencia) /
((Theta12 * prevalencia) + ((1 - Theta22) * (1 - prevalencia)))
VPN_2 <- (Theta22 * (1 - prevalencia)) /
(((1 - Theta12) * prevalencia) + (Theta22 * (1 - prevalencia)))
#
VPP_3 <- (Theta13 * prevalencia) /
((Theta13 * prevalencia) + ((1 - Theta23) * (1 - prevalencia)))
VPN_3 <- (Theta23 * (1 - prevalencia)) /
(((1 - Theta13) * prevalencia) + (Theta23 * (1 - prevalencia)))
#
VPP_4 <- (Theta14 * prevalencia) /
((Theta14 * prevalencia) + ((1 - Theta24) * (1 - prevalencia)))
VPN_4 <- (Theta24 * (1 - prevalencia)) /
(((1 - Theta14) * prevalencia) + (Theta24 * (1 - prevalencia)))
#
VPP_5 <- (Theta15 * prevalencia) /
((Theta15 * prevalencia) + ((1 - Theta25) * (1 - prevalencia)))
VPN_5 <- (Theta25 * (1 - prevalencia)) /
(((1 - Theta15) * prevalencia) + (Theta25 * (1 - prevalencia)))
# Crear una función para generar los gráficos
crear_grafico <- function(prevalencia, VPP, VPN, titulo) {
data <- data.frame(
Prevalencia = prevalencia,
VPP = VPP,
VPN = VPN
)
ggplot(data, aes(x = Prevalencia)) +
geom_line(aes(y = VPP, color = "VPP"), size = 1) +
geom_line(aes(y = VPN, color = "VPN"), size = 1) +
labs(title = titulo, y = "Valores Predictivos", x = "Prevalencia") +
scale_color_manual(name = "", values = c("VPP" = "skyblue", "VPN" = "red")) +
theme_minimal()
}
#graficos individuales
#
grafico_1 <- crear_grafico(prevalencia, VPP_1, VPN_1, "Algoritmo basado en Matriz de Confusión")
#
grafico_2 <- crear_grafico(prevalencia, VPP_2, VPN_2, "Algoritmo")
#
grafico_3 <- crear_grafico(prevalencia, VPP_3, VPN_3, "Algoritmo")
#
grafico_4 <- crear_grafico(prevalencia, VPP_4, VPN_4, "Algoritmo")
#
grafico_5 <- crear_grafico(prevalencia, VPP_5, VPN_5, "Algoritmo")
# Combinar los gráficos en una sola visualización
grid.arrange(grafico_1, grafico_2,grafico_3, grafico_4,grafico_5, ncol = 3, nrow = 2)
#graficos individuales
#
grafico_1 <- crear_grafico(prevalencia, VPP_1, VPN_1, "Regla clasificación a partir de función cópula")
#
grafico_2 <- crear_grafico(prevalencia, VPP_2, VPN_2, "Regla clasificadora + Alg 1 Mendez")
#
grafico_3 <- crear_grafico(prevalencia, VPP_3, VPN_3, "Regla clasificadora + Alg 2 Mendez")
#
grafico_4 <- crear_grafico(prevalencia, VPP_4, VPN_4, "Regla clasificadora + Alg 3 Mendez")
#
grafico_5 <- crear_grafico(prevalencia, VPP_5, VPN_5, "Regla clasificadora + Alg 4 Mendez")
# Combinar los gráficos en una sola visualización
grid.arrange(grafico_1, grafico_2,grafico_3, grafico_4,grafico_5, ncol = 3, nrow = 2)
# Combinar los gráficos en una sola visualización
x11)
# Combinar los gráficos en una sola visualización
x11()
grid.arrange(grafico_1, grafico_2,grafico_3, grafico_4,grafico_5, ncol = 3, nrow = 2)
#Valores predictivos para la estimaciones por apriori informativa
#
VPP_1M<- (Theta11M * prevalencia) /
((Theta11M * prevalencia) + ((1 - Theta21M) * (1 - prevalencia)))
VPN_1M <- (Theta21M* (1 - prevalencia)) /
(((1 - Theta11M) * prevalencia) + (Theta21M* (1 - prevalencia)))
#
VPP_2M <- (Theta12M * prevalencia) /
((Theta12M * prevalencia) + ((1 - Theta22M) * (1 - prevalencia)))
VPN_2M <- (Theta22M * (1 - prevalencia)) /
(((1 - Theta12M) * prevalencia) + (Theta22M * (1 - prevalencia)))
#
VPP_3M <- (Theta13M * prevalencia) /
((Theta13M * prevalencia) + ((1 - Theta23M) * (1 - prevalencia)))
VPN_3M <- (Theta23M * (1 - prevalencia)) /
(((1 - Theta13M) * prevalencia) + (Theta23M * (1 - prevalencia)))
#
VPP_4M <- (Theta14M * prevalencia) /
((Theta14M * prevalencia) + ((1 - Theta24M) * (1 - prevalencia)))
VPN_4M <- (Theta24M * (1 - prevalencia)) /
(((1 - Theta14M) * prevalencia) + (Theta24M * (1 - prevalencia)))
#
VPP_5M <- (Theta15M * prevalencia) /
((Theta15M * prevalencia) + ((1 - Theta25M) * (1 - prevalencia)))
VPN_5M <- (Theta25M * (1 - prevalencia)) /
(((1 - Theta15M) * prevalencia) + (Theta25M * (1 - prevalencia)))
# Crear una función para generar los gráficos
crear_grafico <- function(prevalencia, VPP, VPN, titulo) {
data <- data.frame(
Prevalencia = prevalencia,
VPP = VPP,
VPN = VPN
)
ggplot(data, aes(x = Prevalencia)) +
geom_line(aes(y = VPP, color = "VPP"), size = 1) +
geom_line(aes(y = VPN, color = "VPN"), size = 1) +
labs(title = titulo, y = "Valores Predictivos", x = "Prevalencia") +
scale_color_manual(name = "", values = c("VPP" = "skyblue", "VPN" = "red")) +
theme_minimal()
}
#graficos individuales
#
grafico_1M <- crear_grafico(prevalencia, VPP_1M, VPN_1M, "Regla clasificación a partir de función cópula")
#
grafico_2M <- crear_grafico(prevalencia, VPP_2M, VPN_2M, "Regla clasificadora + Alg 1 Méndez")
#
grafico_3M <- crear_grafico(prevalencia, VPP_3M, VPN_3M, "Regla clasificadora + Alg 2 Méndez")
#
grafico_4M <- crear_grafico(prevalencia, VPP_4M, VPN_4M, "Regla clasificadora + Alg 3 Méndez")
#
grafico_5M <- crear_grafico(prevalencia, VPP_5M, VPN_5M, "Regla clasificadora + Alg 4 Méndez")
# Combinar los gráficos en una sola visualización
grid.arrange(grafico_1M, grafico_2M,grafico_3M, grafico_4M,grafico_5M, ncol = 3, nrow = 2)
# Combinar los gráficos en una sola visualización
x11()
grid.arrange(grafico_1M, grafico_2M,grafico_3M, grafico_4M,grafico_5M, ncol = 3, nrow = 2)
windows(height=10,width=15)
###  librerias ###
library(readxl);library(GGally);library(ggplot2);library(patchwork)
library(rriskDistributions);library("fitdistrplus");library(stats)
library(MASS);library(nortest);library(goftest);library(rmutil); library(e1071)
library(copula);library(dplyr);library(VineCopula); library(naivebayes);library(PRROC);
library(GGally);library(gridExtra)
pROC::plot.roc(roc, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - regla clasificadora + Mendez1')
pROC::plot.roc(roc2, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - regla clasificadora + Mendez2')
windows(height=10,width=15)
par(mfrow = c(2,2))
pROC::plot.roc(roc, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - regla clasificadora + Mendez1')
pROC::plot.roc(roc2, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - regla clasificadora + Mendez2')
pROC::plot.roc(roc3, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - regla clasificadora + Mendez3')
pROC::plot.roc(roc4, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - regla clasificadora + Mendez4')
windows(height=10,width=15)
par(mfrow = c(2,2))
pROC::plot.roc(roc, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - Regla clasificadora + Mendez1')
pROC::plot.roc(roc2, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - Regla clasificadora + Mendez2')
pROC::plot.roc(roc3, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - Regla clasificadora + Mendez3')
pROC::plot.roc(roc4, legacy.axes = TRUE, print.thres = "best", print.auc = TRUE,
auc.polygon = FALSE, max.auc.polygon = FALSE, auc.polygon.col = "gainsboro",
col = 2, grid = TRUE, main='Curva ROC - Punto de corte - Regla clasificadora + Mendez4')
###  librerias ###
library(readxl);library(GGally);library(ggplot2);library(patchwork)
library(rriskDistributions);library("fitdistrplus");library(stats)
library(MASS);library(nortest);library(goftest);library(rmutil); library(e1071)
library(copula);library(dplyr);library(VineCopula); library(naivebayes);library(PRROC);
library(GGally);library(gridExtra)
# Combinar los gráficos en una sola visualización
x11()
grid.arrange(grafico_1M, grafico_4M,grafico_2M, grafico_5M,grafico_3M, ncol = 3, nrow = 2)
